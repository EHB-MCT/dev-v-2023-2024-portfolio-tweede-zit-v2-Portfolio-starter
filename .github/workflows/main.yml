name: CI/CD Pipeline

on:
  push:
    branches: [dev]

env:
  POSTGRES_USER: myuser
  POSTGRES_PASSWORD: mypassword
  POSTGRES_DB: mydatabase
  POSTGRES_HOST_AUTH_METHOD: trust
  PG_CONNECTION_STRING: postgres://myuser:mypassword@store:5432/mydatabase

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Create .env file
        working-directory: images/api
        run: |
          echo POSTGRES_USER=myuser > .env
          echo POSTGRES_PASSWORD=mypassword >> .env
          echo POSTGRES_DB=mydatabase >> .env
          echo POSTGRES_HOST_AUTH_METHOD=trust >> .env
          echo PG_CONNECTION_STRING=postgres://myuser:mypassword@store:5432/mydatabase >> .env

      - name: Verify .env file
        working-directory: images/api
        run: cat .env

      - name: Install dependencies
        working-directory: images/api
        run: npm install

      - name: Build docker containers
        working-directory: images/api
        run: docker-compose --env-file .env build

      - name: Run docker containers
        working-directory: images/api
        run: |
          echo --- Running test cases ---
          docker-compose --env-file .env up --exit-code-from api
          echo --- Completed test cases ---

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Create .env file
        working-directory: images/api
        run: |
          echo POSTGRES_USER=myuser > .env
          echo POSTGRES_PASSWORD=mypassword >> .env
          echo POSTGRES_DB=mydatabase >> .env
          echo POSTGRES_HOST_AUTH_METHOD=trust >> .env
          echo PG_CONNECTION_STRING=postgres://myuser:mypassword@store:5432/mydatabase >> .env

      - name: Verify .env file
        working-directory: images/api
        run: cat .env

      - name: Install dependencies
        working-directory: images/api
        run: npm install

      - name: Build
        working-directory: images/api
        run: docker-compose --env-file .env build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish
        working-directory: images/api
        run: docker-compose --env-file .env push







